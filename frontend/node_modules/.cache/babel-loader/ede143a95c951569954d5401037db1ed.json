{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Idokoken\\\\Desktop\\\\ict_exercise\\\\projects\\\\fullstack\\\\jobsite\\\\frontend\\\\src\\\\context\\\\AppContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useReducer, useContext } from \"react\";\nimport { Reducer } from \"./reducer\";\nimport axios from \"axios\";\nimport { DISPLAY_ALERT, CLEAR_ALERT, REGISTER_USER_BEGIN, REGISTER_USER_SUCCESS, REGISTER_USER_ERROR } from \"./actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  isLoading: false,\n  showAlert: false,\n  alertText: \"\",\n  alertType: \"\",\n  user: null,\n  token: null,\n  userLocation: \"\"\n};\nconst AppContext = /*#__PURE__*/React.createContext();\n\nconst AppProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(Reducer);\n\n  const displayAlert = () => {\n    dispatch({\n      type: DISPLAY_ALERT\n    });\n    clearAlert();\n  };\n\n  const clearAlert = () => {\n    setTimeout(() => {\n      dispatch({\n        type: CLEAR_ALERT\n      });\n    }, 3000);\n  };\n\n  const registerUser = async currentUser => {\n    dispatch({\n      type: REGISTER_USER_BEGIN\n    });\n\n    try {\n      const resp = await axios.post(\"/api/v1/auth/register\", currentUser);\n      console.log(resp);\n      const {\n        user,\n        token,\n        location\n      } = resp.data;\n      dispatch({\n        type: REGISTER_USER_SUCCESS,\n        payload: {\n          user,\n          token,\n          location\n        }\n      });\n    } catch (error) {\n      console.log(error.resp);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: { ...state,\n      displayAlert,\n      registerUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AppProvider, \"GLYnMQ8Xkooi29FkxmARXYan304=\");\n\n_c = AppProvider;\n\nconst useAppContext = () => {\n  _s2();\n\n  return useContext(AppContext);\n};\n\n_s2(useAppContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport { initialState, AppProvider, useAppContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"sources":["C:/Users/Idokoken/Desktop/ict_exercise/projects/fullstack/jobsite/frontend/src/context/AppContext.js"],"names":["React","useReducer","useContext","Reducer","axios","DISPLAY_ALERT","CLEAR_ALERT","REGISTER_USER_BEGIN","REGISTER_USER_SUCCESS","REGISTER_USER_ERROR","initialState","isLoading","showAlert","alertText","alertType","user","token","userLocation","AppContext","createContext","AppProvider","children","state","dispatch","displayAlert","type","clearAlert","setTimeout","registerUser","currentUser","resp","post","console","log","location","data","payload","error","useAppContext"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,UAA5B,QAA8C,OAA9C;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,aADF,EAEEC,WAFF,EAGEC,mBAHF,EAIEC,qBAJF,EAKEC,mBALF,QAMO,WANP;;AAQA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,KADQ;AAEnBC,EAAAA,SAAS,EAAE,KAFQ;AAGnBC,EAAAA,SAAS,EAAE,EAHQ;AAInBC,EAAAA,SAAS,EAAE,EAJQ;AAKnBC,EAAAA,IAAI,EAAE,IALa;AAMnBC,EAAAA,KAAK,EAAE,IANY;AAOnBC,EAAAA,YAAY,EAAE;AAPK,CAArB;AAUA,MAAMC,UAAU,gBAAGlB,KAAK,CAACmB,aAAN,EAAnB;;AAEA,MAAMC,WAAW,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACpC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBtB,UAAU,CAACE,OAAD,CAApC;;AAEA,QAAMqB,YAAY,GAAG,MAAM;AACzBD,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEpB;AAAR,KAAD,CAAR;AACAqB,IAAAA,UAAU;AACX,GAHD;;AAKA,QAAMA,UAAU,GAAG,MAAM;AACvBC,IAAAA,UAAU,CAAC,MAAM;AACfJ,MAAAA,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAEnB;AAAR,OAAD,CAAR;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GAJD;;AAMA,QAAMsB,YAAY,GAAG,MAAOC,WAAP,IAAuB;AAC1CN,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAElB;AAAR,KAAD,CAAR;;AACA,QAAI;AACF,YAAMuB,IAAI,GAAG,MAAM1B,KAAK,CAAC2B,IAAN,CAAW,uBAAX,EAAoCF,WAApC,CAAnB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,YAAM;AAAEf,QAAAA,IAAF;AAAQC,QAAAA,KAAR;AAAekB,QAAAA;AAAf,UAA4BJ,IAAI,CAACK,IAAvC;AACAZ,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAEjB,qBADC;AAEP4B,QAAAA,OAAO,EAAE;AAAErB,UAAAA,IAAF;AAAQC,UAAAA,KAAR;AAAekB,UAAAA;AAAf;AAFF,OAAD,CAAR;AAID,KARD,CAQE,OAAOG,KAAP,EAAc;AACdL,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAK,CAACP,IAAlB;AACD;AACF,GAbD;;AAeA,sBACE,QAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAE,EAAE,GAAGR,KAAL;AAAYE,MAAAA,YAAZ;AAA0BI,MAAAA;AAA1B,KAA5B;AAAA,cACGP;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAlCD;;GAAMD,W;;KAAAA,W;;AAoCN,MAAMkB,aAAa,GAAG,MAAM;AAAA;;AAC1B,SAAOpC,UAAU,CAACgB,UAAD,CAAjB;AACD,CAFD;;IAAMoB,a;;AAIN,SAAS5B,YAAT,EAAuBU,WAAvB,EAAoCkB,aAApC","sourcesContent":["import React, { useReducer, useContext } from \"react\";\r\nimport { Reducer } from \"./reducer\";\r\nimport axios from \"axios\";\r\nimport {\r\n  DISPLAY_ALERT,\r\n  CLEAR_ALERT,\r\n  REGISTER_USER_BEGIN,\r\n  REGISTER_USER_SUCCESS,\r\n  REGISTER_USER_ERROR,\r\n} from \"./actions\";\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  showAlert: false,\r\n  alertText: \"\",\r\n  alertType: \"\",\r\n  user: null,\r\n  token: null,\r\n  userLocation: \"\",\r\n};\r\n\r\nconst AppContext = React.createContext();\r\n\r\nconst AppProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(Reducer);\r\n\r\n  const displayAlert = () => {\r\n    dispatch({ type: DISPLAY_ALERT });\r\n    clearAlert();\r\n  };\r\n\r\n  const clearAlert = () => {\r\n    setTimeout(() => {\r\n      dispatch({ type: CLEAR_ALERT });\r\n    }, 3000);\r\n  };\r\n\r\n  const registerUser = async (currentUser) => {\r\n    dispatch({ type: REGISTER_USER_BEGIN });\r\n    try {\r\n      const resp = await axios.post(\"/api/v1/auth/register\", currentUser);\r\n      console.log(resp);\r\n      const { user, token, location } = resp.data;\r\n      dispatch({\r\n        type: REGISTER_USER_SUCCESS,\r\n        payload: { user, token, location },\r\n      });\r\n    } catch (error) {\r\n      console.log(error.resp);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AppContext.Provider value={{ ...state, displayAlert, registerUser }}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nconst useAppContext = () => {\r\n  return useContext(AppContext);\r\n};\r\n\r\nexport { initialState, AppProvider, useAppContext };\r\n"]},"metadata":{},"sourceType":"module"}